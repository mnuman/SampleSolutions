<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun Nov 10 13:59:38 CET 2013
  Author:  mnuman
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="AuctionBidBPEL"
               targetNamespace="http://xmlns.oracle.com/Marqtplaats/AuctionBidService/AuctionBidBPEL"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/Marqtplaats/AuctionBidService/AuctionBidBPEL"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="urn:abstractAuctionBids"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns2="http://xmlns.qualogy.com/marQtplaats"
         xmlns:ns3="urn:abstractAuction"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://xmlns.qualogy.com/schemas/marQtplaats/bids">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="auctionbidbpel_client" partnerLinkType="ns1:AuctionBidBPEL" myRole="DoBid"/>
    <partnerLink name="medAuctionBids.medAuctionBids"
                 partnerLinkType="ns1:medAuctionBids.medAuctionBids"
                 partnerRole="Bids"/>
    <partnerLink name="AuctionDetailsService"
                 partnerLinkType="ns3:AuctionDetailsService"
                 partnerRole="Auctions"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:AuctionBidRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:AuctionBidResponseMessage"/>
    <variable name="currentHighestBid"
              messageType="ns1:AuctionHighestBidResponseMessage"/>
    <variable name="AuctionDetails"
              messageType="ns3:AuctionDetailsResponseMessage"/>
    <variable name="AuctionBidErrorMessage"
              messageType="ns1:AuctionBidErrorMessage"/>
    <variable name="eventPayload" element="ns2:HigherBidReceived"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in AuctionBidBPEL.wsdl) -->
    <receive name="receiveInput" partnerLink="auctionbidbpel_client" portType="ns1:DoBid" operation="doBidOnAuction" variable="inputVariable" createInstance="yes"/>
    <flow name="ObtainData">
      <sequence name="Sequence">
        <scope name="currentHighestBid" exitOnStandardFault="no">
          <variables>
            <variable name="auctionId"
                      messageType="ns1:AuctionHighestBidRequestMessage"/>
          </variables>
          <sequence name="seqCurrentHighestBid">
            <assign name="assignAuctionId">
              <copy>
                <from>$inputVariable.in/ns2:AuctionID</from>
                <to>$auctionId.in</to>
              </copy>
            </assign>
            <invoke name="ivkCurrentHighestBid"
                    partnerLink="medAuctionBids.medAuctionBids"
                    portType="ns1:Bids" operation="getCurrentHighestBid"
                    inputVariable="auctionId"
                    outputVariable="currentHighestBid"
                    bpelx:invokeAsDetail="no"/>
          </sequence>
        </scope>
      </sequence>
      <sequence name="Sequence2">
        <scope name="AuctionDetails" exitOnStandardFault="no">
          <variables>
            <variable name="auctionId" messageType="ns3:AuctionRequestMessage"/>
          </variables>
          <sequence name="Sequence1">
            <assign name="auctionID">
              <copy>
                <from>$inputVariable.in/ns2:AuctionID</from>
                <to>$auctionId.payload</to>
              </copy>
            </assign>
            <invoke name="ivkAuctionDetails" partnerLink="AuctionDetailsService"
                    portType="ns3:Auctions" operation="GetDetails"
                    inputVariable="auctionId"
                    outputVariable="AuctionDetails" bpelx:invokeAsDetail="no"/>
          </sequence>
        </scope>
      </sequence>
    </flow>
    <if name="ValidateBuyer">
      <documentation>ValidationOK</documentation>
      <condition>$inputVariable.in/ns2:Buyer  !=  $AuctionDetails.payload/ns2:Auction/ns2:Seller</condition>
      <empty name="continue"/>
      <else>
        <documentation>ValidationFails</documentation>
        <sequence name="terminationSequenceWithFaultReply">
          <assign name="assignErrorMessage">
            <copy>
              <from>'Cheater ! As a seller you are *not* allowed to place bids on your own auctions !'</from>
              <to>$AuctionBidErrorMessage.oops</to>
            </copy>
          </assign>
          <reply name="replyInvalidBuyer" faultName="ns1:GeneralBidFault"
                 partnerLink="auctionbidbpel_client" portType="ns1:DoBid"
                 operation="doBidOnAuction" variable="AuctionBidErrorMessage"/>
          <exit name="Aftaaien"/>
        </sequence>
      </else>
    </if><if name="BidHigherThanStartingPrice"
             xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>Controleer dat het bod geldig is.</documentation>
      <condition>((count($AuctionDetails.payload/ns2:Auction/ns2:StartingPrice) = 0) or ($inputVariable.in/ns2:PriceBid &gt;=$AuctionDetails.payload/ns2:Auction/ns2:StartingPrice) )</condition>
      <empty name="continue"/>
      <else>
         <documentation>ValidationFails</documentation>
         <sequence name="terminationSequenceWithFaultReply">
            <assign name="assignErrorMessage">
            <copy>
              <from>'The bid is too low with respect to the starting price.'</from>
              <to>$AuctionBidErrorMessage.oops</to>
            </copy>
          </assign>
            <reply name="replyInvalidBuyer" faultName="ns1:BidTooLowFault"
                   partnerLink="auctionbidbpel_client" portType="ns1:DoBid"
                   operation="doBidOnAuction"
                   variable="AuctionBidErrorMessage"/>
            <exit name="Aftaaien"/>
         </sequence>
      </else>
   </if><if name="BidHigherThanCurrentHighest"
            xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>Bod moet hoger zijn dan huidig maximum</documentation>
      <condition>((count($currentHighestBid.return/ns2:Bid) = 0) or ($inputVariable.in/ns2:PriceBid &gt;= $currentHighestBid.return/ns2:Bid))</condition>
      <empty name="continue"/>
      <else>
         <documentation>ValidationFails</documentation>
         <sequence name="terminationSequenceWithFaultReply">
            <assign name="assignErrorMessage">
               
            <copy>
                  <from>'The bid is too low with respect to the current highest bid.'</from>
                  <to>$AuctionBidErrorMessage.oops</to>
               </copy></assign>
            <reply name="replyInvalidBuyer" faultName="ns1:BidTooLowFault"
                   partnerLink="auctionbidbpel_client" portType="ns1:DoBid"
                   operation="doBidOnAuction"
                   variable="AuctionBidErrorMessage"/>
            <exit name="Aftaaien"/>
         </sequence>
      </else>
   </if><if name="BidSatisfiesIncrement"
            xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>Bod moet hoger zijn dan huidig maximum</documentation>
      <condition>((count($currentHighestBid.return/ns2:Bid) = 0) and (count($AuctionDetails.payload/ns2:Auction/ns2:StartingPrice) = 0)) or (count($AuctionDetails.payload/ns2:Auction/ns2:MinimumIncrement) = 0 ) or($inputVariable.in/ns2:PriceBid &gt;= ($currentHighestBid.return/ns2:Bid + $AuctionDetails.payload/ns2:Auction/ns2:MinimumIncrement)) or($inputVariable.in/ns2:PriceBid &gt;= ($AuctionDetails.payload/ns2:Auction/ns2:StartingPrice + $AuctionDetails.payload/ns2:Auction/ns2:MinimumIncrement))</condition>
      <empty name="continue"/>
      <else>
         <documentation>ValidationFails</documentation>
         <sequence name="terminationSequenceWithFaultReply">
            <assign name="assignErrorMessage">
               
            <copy>
                  <from>'The bid is too low with respect to the current highest bid.'</from>
                  <to>$AuctionBidErrorMessage.oops</to>
               </copy></assign>
            <reply name="replyInvalidBuyer" faultName="ns1:BidTooLowFault"
                   partnerLink="auctionbidbpel_client" portType="ns1:DoBid"
                   operation="doBidOnAuction"
                   variable="AuctionBidErrorMessage"/>
            <exit name="Aftaaien"/>
         </sequence>
      </else>
   </if>
    <scope name="BidOK" exitOnStandardFault="no">
      <variables>
        <variable name="storeBid" messageType="ns1:AuctionBidRequestMessage"/>
      </variables>
      <sequence name="Sequence3">
        <assign name="assignBidToBeStored">
          <copy>
            <from>$inputVariable.in/ns2:AuctionID</from>
            <to>$storeBid.in/ns2:AuctionID</to>
          </copy>
          <copy>
            <from>$inputVariable.in/ns2:Buyer</from>
            <to>$storeBid.in/ns2:Buyer</to>
          </copy>
          <copy>
            <from>$inputVariable.in/ns2:PriceBid</from>
            <to>$storeBid.in/ns2:PriceBid</to>
          </copy>
        </assign>
        <invoke name="invokeStoreBid"
                partnerLink="medAuctionBids.medAuctionBids" portType="ns1:Bids"
                operation="storeBid" inputVariable="storeBid"
                bpelx:invokeAsDetail="no"/>
      </sequence>
    </scope>
    <assign name="assignStatus">
      <copy>
        <from>'OK, dude !'</from>
        <to>$outputVariable.return</to>
      </copy>
    </assign>
    <if name="IfHigherBid">
      <documentation>HigherBidIsReceived</documentation>
      <condition>count($currentHighestBid.return/ns2:Bid) &gt; 0</condition>
      <sequence name="Sequence4">
        <assign name="Assign1">
          <copy>
            <from>$inputVariable.in/ns2:AuctionID</from>
            <to>$eventPayload/ns2:AuctionID</to>
          </copy>
          <copy>
            <from>$inputVariable.in/ns2:PriceBid</from>
            <to>$eventPayload/ns2:NewHighestBid</to>
          </copy>
          <copy>
            <from>$AuctionDetails.payload/ns2:Auction/ns2:Description</from>
            <to>$eventPayload/ns2:AuctionDescription</to>
          </copy>
          <copy>
            <from>$currentHighestBid.return/ns2:Bid</from>
            <to>$eventPayload/ns2:OldHighestBid</to>
          </copy>
          <copy>
            <from>$currentHighestBid.return/ns2:BidderNickname</from>
            <to>$eventPayload/ns2:NickName</to>
          </copy>
        </assign>
        <invoke name="kickOffEvent"
                bpelx:eventName="ns4:HigherBidEvent"
                inputVariable="eventPayload" bpelx:invokeAsDetail="no"/>
      </sequence>
      <else>
        <empty name="noActionRequired"/>
      </else>
    </if>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="auctionbidbpel_client" portType="ns1:DoBid" operation="doBidOnAuction" variable="outputVariable"/>
  </sequence>
</process>